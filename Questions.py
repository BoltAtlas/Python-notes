# n = int(input())
# arr = map(int, input().split())

# list = []
# for i in arr:
#     list.append(i)

# for i in list:
#     if list.count(i) > 1:
#         list.remove(i)

# list.sort()
# list = list[::-1]
# print(list[1])


# test = [1,2,3,4,5,6,7]

# 11111111111111111111111111111111111111111111111111111111111111111111111111

# x, y, z, n = 1, 1, 1, 2

# list = []
# for i in range(0, x+1):
#     for j in range(0, y+1):
#         for k in range(0, z+1):
#             if i+j+k != n:
#                 list.append([i, j, k])

# print(list)

# 1111111111111111111111111111111111111111111111111111111111111111111111111111111
# for _ in range(int(input())):
#     name = input()
#     score = float(input())
# list = []
# list.append(name)
# list.append(score)
# print(list)

# # 5
# Harry
# 37.21
# Berry
# 37.21
# Tina
# 37.2
# Akriti
# 41
# Harsh
# 39


# 111111111111111111111111111111111111111111111111111111111111111111111111111111111111

# n = int(input())
# student_marks = {}
# for _ in range(n):
#     name, *line = input().split()
#     scores = list(map(float, line))
#     student_marks[name] = scores
# query_name = input()


# test = [1, 2, 3]
# print(sum(test)/len(test))


#############################################################################################

# def swap_case(s):
#     ans = ""
#     for i in s:
#         if i in "abcdefghijklmnopqrstuvwxyz":
#             ans = ans + i.upper()
#         elif i in "ABCDEFGHIJKLMNOPQRSTUVWXYZ":
#             ans = ans + i.lower()
#         else:
#             ans = ans + i

#     return ans

# print(swap_case("lMao"))

##############################################################################################

# def print_full_name(first, last):
#     # Write your code here
#     return "Hello {x} {y}! You just delved into python".format(x=first, y=last)


# print(print_full_name("Trishal", "Pandey"))

###############################################################################################

# def count_substring(string, sub_string):
#     sub = 0
#     ans = 0
#     for i in string:
#         if sub_string[0] == i:
#             sub += 1
#             if sub == len(sub_string):
#                 ans += 1
#     return ans


# if __name__ == '__main__':
#     string = input().strip()
#     sub_string = input().strip()

#     count = count_substring(string, sub_string)
#     print(count)

##################################################################################################

# if __name__ == '__main__':
#     s = "ascb;ascjkabs"
#     for i in s:
#         if i.isalpha(i):
#             print(True)
#             break
#         elif

####################################################################################################

# thickness = int(input())  # This must be an odd number
# c = 'H'

# # Top Cone
# for i in range(thickness):
#     print((c*i).rjust(thickness-1)+c+(c*i).ljust(thickness-1))

# # Top Pillars
# for i in range(thickness+1):
#     print((c*thickness).center(thickness*2)+(c*thickness).center(thickness*6))

# # Middle Belt
# for i in range((thickness+1)//2):
#     print((c*thickness*5).center(thickness*6))

# # Bottom Pillars
# for i in range(thickness+1):
#     print((c*thickness).center(thickness*2)+(c*thickness).center(thickness*6))

# # Bottom Cone
# for i in range(thickness):
#     print(((c*(thickness-i-1)).rjust(thickness)+c +
#           (c*(thickness-i-1)).ljust(thickness)).rjust(thickness*6))

################################################################################################

# max_width = 15
# str = "bscnksbcjscksbcjksbckjdscsbdcbsdkjbcsdjcbsdjkcbsdkjbckjdsbjksd"
# arr = list(str)
# count = 0
# for i in arr:
#     count += 1
#     if count % (max_width+1) == 0:
#         arr.insert(count-1, "\n")

# str = ''.join(arr)
# print(str)

##############################################################################################

# n, m = input().split()
# n, m = int(n), int(m)
# dc = ((m-1)//2)-1
# dc2 = (m-7)//2
# dc3 = (m-n*3)+3

# for i in range(1, n):
#     if i % 2 != 0:
#         print('-'*dc + '.|.'*i + '-'*dc)
#         dc -= 3

# print('-'*dc2 + 'WELCOME' + '-'*dc2)

# for j in reversed(range(1, n)):
#     if j % 2 != 0:
#         print('-'*dc3 + '.|.'*j + '-'*dc3)
#         dc3 += 3

##############################################################################################

# n = 17
# for i in range(1, n+1):
#     # print("{x} + {y} + {z} + {w}").format(x=i,
#     #                                       y=oct(i), z=(hex(i.upper())), w=bin(i))
#     print(f"{i}  {oct(i)}  {hex(i).upper()}   {bin(i)}")

#############################################################################################

# alpha = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l',
#          'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']

#############################################################################################
# s = "1 w 2 r 3g"
# list = list(s)
# for i in list:
#     num = list.index(i)
#     if num == 0:
#         list[num] = i.upper()
#     if i == " ":
#         for j in list[num:num+2]:
#             list[num+1] = j.upper()
# s = ''.join(list)
# print(s)
##############################################################################################
# n = int(input())
# arr = set(input().split())
# count = 0
# for i in arr:
#     count += 1
# print(count)
###############################################################################################

# n = int(input())


# def get_chars(i, n):
#     if n == 1:
#         return chr(97 + i)
#     return chr(97 + i) + '-' + get_chars(i - 1, n - 1) + '-' + chr(97 + i)


# def print_rangoli(size):
#     width = 4 * n - 3
#     for i in range(1, 2 * n):
#         print(get_chars(n - 1, i if i <= n else 2 * n - i).center(width, '-'))


# print_rangoli(n)
##########################################################################################
# string = "RTQXLDVWHFVIGNQVCXJLITNMNHEKGTOZPGXCJSYSAVAGIQDKOMXWIKKXTOHCKXBBDADOVCGVXHBIXEUNTSMDEWAANJCXGFALGDZBHFWHMZRMFLBAFNDMKDMZMQWUVYFBDEENMCUYBNMHYOJGBNSNSGMHWKBRKJVONZBZCXAFKMOKCYSGLKTFSIMOUQIFZDTOEWQITQOFECPHAKPNUIVPSHDNZNUYQPNXNDFGVTNZYEIAOXQLILACUFRUTLSLCHIPMOXHJKJJPTKFRCQBNSDJYVDRIYCLHNAUBADMKMWBGIHZKZAZSFIQCMJLMNYTAAPDATQLHOOPWXOGXQFRYPHABSNPFLLGOAJOVBBDPSUNPLTMBADBSMETERLMFWUTYFJUHNZYFTMUEHJIKMJCBNXHHIVMGPHFVSBEFAEKVQFCAOKKCVOFLLNUWKIEARLXJMDPOHZKAGOAWAMBXCGKPVELGMSIDDFNQIEERFQRMETIGHJEJSOZNTMVHEDNIKCAUGGMLXFZDZKKGVQQNERDZDYHICWSMYSJGYVTVATBBDNKYDCOJTRJWPSGTOYIOQRUPONMQIPSLEEMHGATZTCXIWGEKEMYXFUOTJCJSUDFYHTINVBOOFOZBUDNAPLZWHPPQSAIMEQKLJUZFVPTADSDZVQCMDBIKRZBLALZEDLRNGSSBINENGHPDYRSBUCMNCPYECXKGJBTRUNSCAYRIGGMGXGHUIVHMMIQPHAXSCSJYFCAHCRQIAEOXKYTUTBJGJZXQCULGOUEVYGCBZULZYAZKASFTVOBEPYXTUIBKEHFDNIGPCRODTPNTIUNDKQKCRJXLTZWXIBCYLINQADTVTIPDDEIPUURLFRZYQXYYACYMLLCNRXKMFZRKFZAAWTNBKOCCLADMEBAPNEEGBPSGQJRWKTYGONKZCMBPOGDSIDKXHODKFVTWEMSOFSXTFHUHTWXJEABMGLJPCMAHJTDNFXEMPBFVKCEDYDMCEPRMBABFPDMYWSODRUPHVXEHZKKZOYDUNUGQXJVONIOLCCPTYGCVFICGTMFHMLBCHJSGSOUFYJTCNKVMQAHYIKEBYMINXLPGUHNPXHUXSPZGZXUSXDQHPWJQITDHHSOBBBQBINYDEALEXFYWKODAMOQVKVCRPQUQTNRECSHGSSKRZINJYSJLJBITYMMNFIEYVXCXPJGJDSACBPMBIXOTBYMZLANQITQGSTDKELTKEWMHLAIVAZOBXCCKCPCNKTTDOYNUKIEOETVSVFNVGEWEIBQLQTABOVGCTVYFDFTKYQETWTRCXNIGOBTHUVKKQSOJNMPSRKERBINZCEDBTOJKPCRLZDVPVJBKXSCPCHIFPVGTZMVTAEDPJWAIZXAWGBGDTKUXRDFJYLCAXZTZGYQPUQZVPZRVAZBVJVTBYYMZLQZLQUKWSBNOTMJJOCGOBHMKFFLFFZESQFDIBQEVTTJMHSXVWGMXPAIUFVAMVGELMITPAZLTUUHBPHZLNNJCNTXUOZGJFMWTUPJUQUPKQXOHEPVREGVRZUNNTTZBFVUCNFYFBOSSNGBRXWKBCFUDCHRVASYHNTLCYKICAAWNIXGFWQIAXCEZJXXLPVUEOGHPSRRUTNJBMPIIFSJCUPCFMBSDWOHNWQCQHVKAITDUILFPFOUZFWGRZAUVRBINUKEBHQEPMHMWVTMAJGCOEKFDLBAEEJRYVXCDQGUCPGYKZMNKUPYYBDDOGESLPMJKJLNBTIDJQEVSQICNZBLBGRRNXKAMWJWHXMJSUOBMSXELHJYJMLMUEDHBPJPLVOVSAGKWUOIPNPAWAAFMLRGSXQTMZLAUZVOZDBXXPFMEWOAWOGKCZRUWHNLIALFZITYLWVKLDXRBLSYAAKCZBYYKLJVMUANETORSJBFOYXSMPQOPCSQEQOQBXLPTLFZHTQZESETQBLESDSJFKALAOCEOPVHBAHITXJARNTKRGOJLHTSTTGUJKAXZVFAYOKTNTTFJOPAWDLJMGCGBKCLUCITZPWZFGTTCOALDPLBUYLHFPPGZRRTVCOWTKWBTRWVFWGKLTMFTXOYODFNWYIRCWQYJMZEFVZKRHXECJLVICUWFBLEBTXERNECBDGGAHRTQOXSZKQJMMFUPSYQLXWELAHMFPTHXMAPCZKBKAMYOTUDLUVWSSCDUJRCBMJYYKPCLZFVZRWPKQSVLOTDIWIEHBGIOSIOEYRPXWNZOJOAZJWMXRPHNZLVBUDRMMFQKWHJVUILFZLFIJTHBLOOKBLNVREJDKBPIJYDDJOJICQQLJXOWNFHOQUMHZVMLXDTGEZLNPWXROPFAOTWBADRTADCBZPMWSHEYGRLWOKPEZUENQDQSIILKLOLMFZKZHQYPIJLYUDCVXJLPOBKWLVHZJSLQUYQBOOQWZEUVHZRGKCYYFIWTFDSRYFHSDXVSNNQNTNICMBLYFJWNTSGAYYRWFBQJYLDOATBUGLYUNJSUUQHPLPQJPHFVIXGJKJXKEAGNLFHAQCXLSGADWQOLAVGKSMVCXUPCUXPICYKVCHGXOICKZRXBMENFSJJQDYUAYLICJSXMCDLSMNENEBQRHDYAOHSSIMUGXCKIWIWYNHQBVWOZYGSFMQHAAZUKLOSKSCVPKRPAZIBWEQXCYQKKIRNIRHUEYMRQPMHBDXBEFDALVAOTQAGYRTJKCDRASKTHWAKBZOIGRKSOKIJAIPBBIMONRFNJPGSNJDOIRWRKJJYTTHWBZXEHLSUCZKMOSGDDJSOCQFOZQMVJWRMVQQEBJBFILTZFAEJLYXQPEEQUTNDPEPKWHQXQRFBEYCKYGVMFUCWYGOSZEXQIOCFVTEOKJRPKTBKBWWIQAGOJVIKZHBJVDQQWXGJIXASSBFUXBCNELDNGNXHUYSREJHCIQLQNLLGOQALTEAXPFKXSKGOKZFOKPTUFEKSSVYINAUHHWEYERWWBENLFSARJTLOZYJTVJCJMYQTWWRANPZOWMABGCTQXGGYEPUAZWJLWZGSXZVLRUZNGBOODJEAQNBUCVUDTFQRGYJEYEPPYQEGSUVVEBYWOZQTWNYPUPGBNRFNYWCYMGHEBECHFCDWDVRZKPQFEYIUPPHPLMOXUXEXBGEGIJELHVMRNCYTAGNRVXHGJXGDUMBVUHDERKRYHDPUHQOHWBASAJAJGINCUQZOXFSOPLOYOGTVWJESMFMNOPWXXLBUDBKBIFRXQGXFMQCKBHCOORBCGZBFLDBOGMRORJNJRKOFDTPEATSOKVSSVWAGZBWFPQTIZISSSIXVBMCDFWTSSOMNKMVLQTSFJNQKVKCPSZLWNPBVLXNDLZSXONKEHCLSRDDONFDIHOEUFHRREEWRGPQWCCCLGPEXTHLGOPOVFUSLEJEKQAEYPUUSXYFFNJDGSQPJFFENCYAGKESAEWAUTUOSUVXHHCQBTFKYMPNOPNWZRPZWNZSGVIAPFYZMAPOVUYUGPHXFVTGOKIMAJGIFOJWUJVILMWHIXDROKOTHJCYWKKWTREYHNXDYUMKHKRPHUGWGWRQGTOCDYAXREXZUWCSTOCABTRIPAGWWAOEVCIBCIYUNXTHWXZPOEPPXIZPIGNHIBNDFWEHEEDREWAAWCPKGGZFQYUBGHIOKVUPRAZYFCRLBSLXWCHCKGHAEEBNLLBWJXNCYMAFPSQQMDNIFWMPCTRIXTVLGZJPWWSULSBAMRSAUHKBDWQHQIPPDLCJKLZGKTDVLEXAYRASYLUDJMKBWBRBMTLWHMFRFKMSQLUOCXJCKFHTTRVQSMRHHEFOSMHXWTSNGMDILMMVTTPNMKDHYWOFDTWVIDVEZPTFDXQPLCKFWZSILXRJVFRYBPWJSTPTILZLKPCVTNCPOWAAVTJRZCRCRPNMIEFQPEEZVGVPVZGKWIKTCVKDAEHRTUDEYJUOPANLJKCGKKQITCBXAOAAUHRNDXRBGORVQHIBRMIDXYNSDRRDHTFBCWOFTIIBWCZOJJQCWYIVYVPBMGGTZLWBKLIFVQHRSIHDRXGPXOKWLBZAHGVITSLDDTJYMQRGAAMRASHXITVTVVTEDPPWHAAMWJMKBFSBFEUFWDDEXAAUVTAYKPVTSXHQITAJYUMGZGNXMSEJTEFOZFPKXMFPJNHRGJCHDOPCWCAIVETOKYEJGTVDFBUQQDHYMLHPBWUYZUIWAEKKEOVKKRPRULIKORICDSUEOOEPKPLKTXWZORKYIBPEPXQFPBIUTCYHSDXCUKONIKMWBYUMCLQRLHYCKIWDMWKEBJGVUUICGXYIXUWZFOSSXRUHBQKOPXSQGBMAXUCETCORYKSEALWYETHFLSVAPORXRDYOZCSTHGMFSELTRKTVDADOUAPLOIJHLJWMNQFUZTCRYNMRXHNCISRESISJSDQDMOPBFXYESAXSNKKNRZPBRIILSAWKDNPRDHUIGSOYSMRIYBXPAOTTXBERDDEISTBVAVGIOUHIIAQGBNYDCRWBUCUZHYHZSIVUFBFTXMCGMUOPKMSOFQRZULACKHBERYAZBFSBTWHHTXWDKQTPIKRDVRHHBKNULOTMVONRMWYFUVKGNDXWNOBLIKSLUGHHWDUTRJKFGJLCGVITZFRMWSZGCSTZAAGWFCPWMACULPYRKIKLPCANWZTBTOATPIPUNHTBJXVUOVLADXMSBOIYNBZHQBCHLSDYBYZMVWGLTTMWSYRUOZUBCTKUWNBHHHIKFJWDGEOZZAYRARNQQHUUCGPYTSICZQOHZMKHQAJRDHLFYYWQIQMKWBLSWTWXLNEMZQWSTFJWOUDOVZGDRSNQWAKSVIPIVWVVMTPFAYDOVHEQIKTCEIUAJEUGOMPKIMHWFWEFWHVRQBHBNCDRLZUWFOETCTFKHMHMKNTJUQANRKOEMTYZSSXXICQLXWXFKGTXTPGQFGDXSRDHKBGETGBEKTPHRMOCVIBOXHECPHBIAHPMIXQEDRIPLZXCNLGIVHXSQDXGLAQNHHASGQWMKGBVFYZSMIDHRCCIFZQSBGGJPGBVYZHIFLFMJHEXPJFGLHQRIGJJORSDZVBYWKIBVONFVUEMFJSRSJKARVKGNEJMCMMYXVCSLRZGNEUTPMKIXUKPPWXEBITFVFDSCHMPZMXMQRHHERPDNAUFWRJZACGXKKPOTBESPBHHTOPZIEEXGZEFQOGSSNPEZGVSKZNZCWHXMWYWCDULCYQUOYPJLGNMNIFXJUWOQFLCBMZGPVRTVJPMHEVVNKHAVOZGIXUADIFGUGMLBDEYMTKWAHRNSYPPNOVXLSYOADXWJJHMPLKDGXZIESVYRKNGALDMDDCFGZBRJKDAVQDDPFMVXJUQWJWWWCIZFLEOKHHVRLXODDUSIINHRJANVYMRAURIHXYUHFRYSPPVSJPCTFLKOLAJKMBMIUWSRUMYCFZUUQSOBJSUOEGDRGODURQDLOXFJLFNQGJNWBDZNWTBCAGTIVXDMPIADFFOSKBITLXPOBPBZKFBMLWVIVYXKIXQPEEHQIRJTRZJUQNTCSWPDSMMOKJAUGQJMXSCFLMACNJWFWRHQNYUIKGYWRYQZRBLOVNVHZXJOGITFZBVNZRVKZTIQTZRMCCCYSXFTUQIDYBKYCHNEBKQAFYTAZKNCPRAHPHALXIQYKCYOMNUNXMPENIEMVTQKLSTCZTPZEGXQKVEWIBLHNBLCJRPGLHQYAJAZFPYJXXZKUFGEGSLWVYYGSPNFXDDXPFYUWZDUWEGRJMXQGLODLOKDGXIDCNCRUANRBQNYWTRGHQYQBMTNCDQIABNDQPWLSKCTCPTZKKFRBFHETBRVEKEHLRMBJIOBUQUXHQYRAFJDKSIDVBYCLEJWYXAHFOKAHGZOWXIZCTEMLORHQRJBWUAWRCFYQPAZXBOUYWVCPZQCQHLGZWJXSLTJNYKGPKFMMVIMTFPKHFNXPYFOXOLPCGBPGLXXXDJLAUYUZPEGWTFLUKBRBOGDUJSCUSZSVLFXFDRGUYPRRUCLFGEGUNLRWDTRXTLSEQSJWJRQJGHBDMOKSVQOIDFEIZXGSKAWDSHZEARNHZQKNHUHCMVKPBQZCQFUAGSFYBECBWSKXIUMPQTTEQDVRWVTMAPOGJUHKALMYDWXOTLDLEZQXCNQAKMOLBFTLZCVBOJCRGBFBNLMTKEQOSHRCTFPWKLHLNFPDQRXYSCZHPOBBSRSMYJRTQIQDTZQJEFMXYJVTOVAFLBJDTBQTMHNERDHLEYWLFKIEWDXKAZRLBARWDHRPQEUHJDUOBSZHDJNZMMLPLCCOFTMICEAUKWEWZYKDRLMUWZVILGZYKCNRXZCADCWQAAMZZYESLQOHRJRCRRDDVQVSPXUVZRLZRXASVFMGXANPLETCXWIUODPEAJBBCMCWLEQILDQLFFARLVVJUDDIGSOIEPLIDPGQUXYHCOSHVUYHQUQMXVUGQJQWACEGRLWNKXXMNPTJKUQCOIONFKVVVMRWQYEHLCXVZUJPLCAXWQZMAPCFAXBXLUVBSZLDCIADEJSPOUNKKOZMGDSIAVFMRBPKAAPEIQIOZCGNXTAJJBYRESZGPFUGGKQIKGNTYXJXBPNAKNMUOKLUENATSVZAFSIPAXKYWUVYJKAWXMSNYFJCSKXKFXMMPVBPUOPRKMPVXPRWEJMEPVHJHEUMDIAUDELYSAPCNGXMXRIDAWIRSPBZVXOBFOVLUJLMJCQYIQMHHXLJTTBNKENHBDIITGTOPECAGTZQLNYSKJDEEGROKGVNLGWFMPVDUXDCSETDSRXCCBGGHAWSITHUZDZNTUQPTURMAMPSDNXHQFNXFJRODZIECJSXFKOYGGMHUEBYRYFJEVGLGAZLZJQDUKBBUPADXOKSSNSLMZUQUBBDBDOCOGFJSIKPYMSXBEPVRJHFJDVFEZIHEZLSHTBABOPBCJZFNQBGAKMJNJQUIZDMAPFHIIHJYYNBHMGUCHDERPPFYGBJHEVHTCODNYPLWCMEOVASCDXWUODVUEEDIBKEGBHTZYEXATDQOELSJIOGYTBVZHYIILOOMXHNWOMYJQPXWARHKINKBQFBXELGPBWDYGQWWEVFUMEQOVYADNKHEQIBUVJLWIOWOGTKKQPFETXSOVUULEBPULSQGCBEKPAAXVKINBNTWMNMKHGVMHKISCBAGCGSUJSREEBUFQNBDBONIUIWEUFYYGBFKHZGQSAXWBRCSGFXHTKSQUOUOVUODVTQDVWVNWSLAJPUQVRZQDRGZICPDXDHUZXZUVVHUNUWZKQRFJQXMKELSGCVFFEAEDZAZUJVKERJOHAVQSSECYRWFTSMAYMHCOHDKRYUVPDLYFIQAAWEZPBGITUKTJRVXZYHQYCNPHYNPGFPIBVJQWRARMNLVEGUDHBVFDIXNIKCQSTZVOKMLCOEQBPLIYFLFIJMORJBCWFSOARLOCXBGOGWRVJZTQNAYWPMPYPRWWKMWDYLFXONNUJFSSGNKTQJRFXHFPYCLKQIOOVTOJHBGSIANPNXKFICKGLQXJUIUMSKDPFRZOUHHDHUUWTGCCIOKTEHFARBPMLSBQLAFFJOKSKEPDLTHVHRROAYQUBFGOXHGIKLQTBAMLHDRUWYRDQITSIKMJPSXPCEXMRNHVQVGXAXRWYKCQTVIDFXNXRMMTSLHMBRHRMPQNPJLNTPDONNSSKHRETDZOPHASAJJMYBBNKPCDEHSRVKMHTFLMJLCAUESUNDIOEMDQDGTHNNBIZPSSUDHFQLFMQZGDERRKDVCGDYPQLSBNHVHEYOJRCRDSSMVXDPJIMMQPKHHXAKKJFSNGIZZKQCEIQAHVRRFFFVWRFDOHQBQXTGDDFCQVHUFZWNVPGAULYQCFWSMMTCJOKPSPTKMCGSCDFZULBPYZHCEDUSROXDCHSWZNILQPDUUKTOXUDXWNZCQUVKKSNOZHNYUVMMKRGGEBVBYABUNAWGWTQILDXNMKNGHZTSTBYXFVADWBXLEVRCRJLEMKRYWHHDGCXBFYYKTZNRCMDGKWJBGWHUGZVEGCHOGFQLFQWYPLSSAXAKTLNBHUYPVTTDXBSDIKQNAONSAFMCCOMYABBHVZZTUSWRVQWFANUDDIXFPLHUZTUZWVJSXILRCJJAAHFCWCFAKEFBPPXPIRQHPZZMHMDMXOMXYTAUVHWHMEJDTGUDALKPKLDUZGGXXSUXNWRJEQQSUBVNIQSKDDZNOCHOKPLJJFGXEAGIQYCMAXZKPRUSWVILZRZJHMVQTBPXBXHTWJFYJGKYAGTWBDHAUILBWGUQKLPNJXHHGOHPVRQVXJRAOBCILPMIWIYGTNTCMCLTRSKMJAJILAKZDMIPCUXACXIXMBCZGNUXGELRFUCQWOQABARFWOHYLPXZSZYYNSXVXIOEESWDHMFKOWRKKYIXPGWHHXIURFRQQIUWARZHFETUCKEOKPLZXKHEJRBAYSRQANNDEOMKVGGXSKMDBZCYLLFUCGXDAOTDBGGIXSUSYARTMDWOFYOQMTNQZKTCANFBVLLSFFMGFEZUJVIOVWHHQUARETTEIAHGLTYRANZIRYCATKRQIYAAUAUAVNGEONKBIKUJZTTQTVTMHMFPKFSGHMGCBMIPBSTKFPVEJQXCLSRSEWJQDDWKPCORQXIRRDDWTADCQCGBUZVYXHQAKMMAQBTIYBZPFDOAFRCWTKZPKXNHEFKQTWSLZLTXPSPWXDYDWABPMAGYXVGDASWTQOEQCXPTRERPHPUFRVWFXCEXXMAXEYSWPWMTVEMPIFGSWAXPXUUUWYRUKUTQSMNHKBAIFOXQVDIRFHGCDBWABQWMKPCCDRKOTMWADVQYAYQHIYJLBHNDXLPHDTMGNYWGKUIPPZORZGYHEHVIRILQUCYXXKDKKCSUWBKMAADZGCJMLEUEOHVIJVFHHLRRNKNLLZXNZDOHHXUUDQZSAWAJRISYVMPKYCVLCVYDAMLHMHDPZEHZAKLRUFRRRGBPLYCPTAUTPFCBOISOMCPNMCGIIYZBGARTAVKUWFPNMUOBCIROKIDYLMGTKFUSHNOIJYEHDTUQPKTRUMIFUNDHZMALRXGBMUJXSNGYIAQYMLRHXBOTRTBQFBEZAMAPGJMAYTYGVQGKBYRYBHSSATLGWPHZBHOJSCJQVKYTAF"
# k = 1007


# def merge_the_tools(string, k):
#     arr = list(string)
#     count = 0

#     for i in arr:
#         count += 1
#         if count % (k+1) == 0:
#             arr.insert(count-1, "\n")

#     arr.append("\n")
#     arr2 = []
#     count1 = 0

#     for i in arr:
#         if i == "\n":
#             arr2.append(arr[:count1])
#             for q in range(k+1):
#                 arr.pop(0)
#                 count1 = -1
#         count1 += 1

#     arr2.append(arr[:k])
#     for w in arr2:
#         print("".join(set(w)))


# merge_the_tools(string, k)

# list = ["lol", 1, 2, 3, 4, 5]
# list.insert(2, ["lol", "bruh"])
# print(list)
# set = {["lol", 1, 2], ["bruh", 3, 4]}
# list1 = [set(string[:string.index(x)])
#          for x in string if string.index(x) == k]
# print(list1)
#############################################################################################################################################################
# n = int(input())
# s = set(map(int, input().split()))
# lst = []
# n1 = int(input())
# for i in range(n1):
#     lst.append(input().split())
# for i in range(n1):
#     if lst[i][0] == "pop":
#         s.pop()
#     if lst[i][0] == "remove":
#         s.remove(int(lst[i][1]))
#     if lst[i][0] == "discard":
#         s.discard(int(lst[i][1]))
# print(sum(s))
####################################################################################################################################################

text = "Hello World"
BrokenLetters = "ad"
checklist = []

for i in text:
    if i == " " or text.index(i) == len(text)-1:
        checklist.append(text[:text.index(i)])
print(checklist)
